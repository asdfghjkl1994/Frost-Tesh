import { type NextRequest, NextResponse } from "next/server"
import crypto from "crypto"

export async function POST(request: NextRequest) {
  try {
    const body = await request.text()
    const signature = request.headers.get("x-line-signature")

    // Verify webhook signature
    if (process.env.LINE_CHANNEL_SECRET && signature) {
      const hash = crypto.createHmac("sha256", process.env.LINE_CHANNEL_SECRET).update(body).digest("base64")

      if (signature !== `SHA256=${hash}`) {
        return NextResponse.json({ error: "Invalid signature" }, { status: 401 })
      }
    }

    const data = JSON.parse(body)
    const events = data.events || []

    for (const event of events) {
      if (event.type === "message" && event.message.type === "text") {
        const userId = event.source.userId
        const messageText = event.message.text.toLowerCase()

        let replyMessage = null

        // Auto-reply logic based on message content
        if (messageText.includes("‡∏à‡∏≠‡∏á") || messageText.includes("booking")) {
          replyMessage = {
            type: "flex",
            altText: "‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ - Service Booking",
            contents: {
              type: "bubble",
              header: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "text",
                    text: "üìÖ ‡∏à‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
                    weight: "bold",
                    color: "#1DB446",
                    size: "lg",
                  },
                ],
                backgroundColor: "#F0F8F0",
              },
              body: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "text",
                    text: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:",
                    wrap: true,
                    margin: "md",
                  },
                ],
              },
              footer: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "button",
                    action: {
                      type: "uri",
                      label: "‡∏à‡∏≠‡∏á‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå",
                      uri: `${process.env.NEXT_PUBLIC_BASE_URL}/booking`,
                    },
                    style: "primary",
                    color: "#1DB446",
                  },
                  {
                    type: "button",
                    action: {
                      type: "uri",
                      label: "‡πÇ‡∏ó‡∏£‡∏à‡∏≠‡∏á",
                      uri: "tel:+15551234567",
                    },
                    style: "secondary",
                    margin: "sm",
                  },
                ],
              },
            },
          }
        } else if (messageText.includes("‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô") || messageText.includes("emergency")) {
          replyMessage = {
            type: "flex",
            altText: "üö® Emergency Service",
            contents: {
              type: "bubble",
              header: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "text",
                    text: "üö® EMERGENCY",
                    weight: "bold",
                    color: "#FFFFFF",
                    size: "xl",
                    align: "center",
                  },
                ],
                backgroundColor: "#FF4444",
              },
              body: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "text",
                    text: "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏ï‡∏∏‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:",
                    wrap: true,
                  },
                ],
              },
              footer: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "button",
                    action: {
                      type: "uri",
                      label: "üö® ‡πÇ‡∏ó‡∏£‡∏î‡πà‡∏ß‡∏ô",
                      uri: "tel:+15551234567",
                    },
                    style: "primary",
                    color: "#FF4444",
                  },
                  {
                    type: "button",
                    action: {
                      type: "uri",
                      label: "‡πÅ‡∏à‡πâ‡∏á‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå",
                      uri: `${process.env.NEXT_PUBLIC_BASE_URL}/emergency`,
                    },
                    style: "secondary",
                    margin: "sm",
                  },
                ],
              },
            },
          }
        } else if (messageText.includes("‡∏£‡∏≤‡∏Ñ‡∏≤") || messageText.includes("price")) {
          replyMessage = {
            type: "flex",
            altText: "üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ - Service Prices",
            contents: {
              type: "bubble",
              header: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "text",
                    text: "üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
                    weight: "bold",
                    color: "#1DB446",
                    size: "lg",
                  },
                ],
              },
              body: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "text",
                    text: "üîß ‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏≠‡∏£‡πå: ‡∏ø800",
                    margin: "md",
                  },
                  {
                    type: "text",
                    text: "üßΩ ‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏≠‡∏£‡πå: ‡∏ø500",
                    margin: "sm",
                  },
                  {
                    type: "text",
                    text: "‚ö° ‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤: ‡∏ø600",
                    margin: "sm",
                  },
                  {
                    type: "text",
                    text: "üö∞ ‡∏ã‡πà‡∏≠‡∏°‡∏õ‡∏£‡∏∞‡∏õ‡∏≤: ‡∏ø700",
                    margin: "sm",
                  },
                  {
                    type: "text",
                    text: "‚òÄÔ∏è ‡∏•‡πâ‡∏≤‡∏á‡πÇ‡∏ã‡∏•‡πà‡∏≤‡πÄ‡∏ã‡∏•: ‡∏ø1200",
                    margin: "sm",
                  },
                ],
              },
              footer: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "button",
                    action: {
                      type: "uri",
                      label: "‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
                      uri: `${process.env.NEXT_PUBLIC_BASE_URL}/#services`,
                    },
                    style: "primary",
                  },
                ],
              },
            },
          }
        } else if (messageText.includes("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ") || messageText.includes("hello") || messageText.includes("hi")) {
          replyMessage = {
            type: "flex",
            altText: "Welcome to Our Service",
            contents: {
              type: "bubble",
              header: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "text",
                    text: "üëã ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö!",
                    weight: "bold",
                    color: "#1DB446",
                    size: "lg",
                  },
                ],
              },
              body: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "text",
                    text: "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤! ‡πÄ‡∏£‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:",
                    wrap: true,
                  },
                  {
                    type: "text",
                    text: "‚Ä¢ ‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤",
                    margin: "md",
                    size: "sm",
                  },
                  {
                    type: "text",
                    text: "‚Ä¢ ‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏õ‡∏≤",
                    margin: "sm",
                    size: "sm",
                  },
                  {
                    type: "text",
                    text: "‚Ä¢ ‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÇ‡∏ã‡∏•‡πà‡∏≤‡πÄ‡∏ã‡∏•",
                    margin: "sm",
                    size: "sm",
                  },
                  {
                    type: "text",
                    text: "‚Ä¢ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô 24/7",
                    margin: "sm",
                    size: "sm",
                  },
                ],
              },
              footer: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "button",
                    action: {
                      type: "uri",
                      label: "‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå",
                      uri: process.env.NEXT_PUBLIC_BASE_URL || "https://yourwebsite.com",
                    },
                    style: "primary",
                  },
                ],
              },
            },
          }
        } else {
          // Default response for unrecognized messages
          replyMessage = {
            type: "text",
            text: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! üëã

‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤ ‡πÄ‡∏£‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:

üîß ‡∏à‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ - ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏à‡∏≠‡∏á"
üö® ‡πÄ‡∏´‡∏ï‡∏∏‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô - ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"  
üí∞ ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤ - ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏£‡∏≤‡∏Ñ‡∏≤"
üìû ‡πÇ‡∏ó‡∏£‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°: (555) 123-4567

‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: ${process.env.NEXT_PUBLIC_BASE_URL}`,
          }
        }

        // Send reply message
        if (replyMessage && process.env.LINE_CHANNEL_ACCESS_TOKEN) {
          await fetch("https://api.line.me/v2/bot/message/reply", {
            method: "POST",
            headers: {
              Authorization: `Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}`,
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              replyToken: event.replyToken,
              messages: [replyMessage],
            }),
          })
        }
      }
    }

    return NextResponse.json({ success: true })
  } catch (error) {
    console.error("Webhook error:", error)
    return NextResponse.json({ error: "Webhook processing failed" }, { status: 500 })
  }
}

export async function GET() {
  return NextResponse.json({ message: "Line webhook endpoint is active" })
}
